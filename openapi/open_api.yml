openapi: 3.0.1
info:
  title: Pagopa payment gateway Mock
  version: '1.0.0'
tags:
  - name: paypalmock
    description: todo
  - name: paypalmanagement
    description: todo
paths:
  /paypalpsp/api/pp_onboarding_back:
    post:
      tags:
        - paypalmock
      summary: server to server api used to start onboarding
      requestBody:
        description: New Onboarding required
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartOnboardingRequest'

      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartOnboardingResponseSuccess'
        default:
          description: Errore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartOnboardingResponseError'
      security:
        - bearerAuth: []
  /paypalpsp/api/pp_pay_direct:
    post:
      tags:
        - paypalmock
      summary: server to server api used to pay
      requestBody:
        description: PpPayDirectRequest
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PpPayDirectRequest'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpDirectResponseSuccess'
        default:
          description: Errore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpDirectResponseError'
      security:
        - bearerAuth: []
  /paypalpsp/api/pp_refund_direct:
    post:
      tags:
        - paypalmock
      summary: server to server api used to refund
      requestBody:
        description: PpRefundDirectRequest
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PpRefundDirectRequest'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpRefundDirectResponseSuccess'
        default:
          description: Errore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpRefundDirectResponseError'
      security:
        - bearerAuth: []
  /paypalpsp/api/pp_bilagr_del:
    post:
      tags:
        - paypalmock
      requestBody:
        description: PPPayPalIdAppIoRequest
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PPPayPalIdAppIoRequest'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpDefaultResponseSuccess'
        default:
          description: Errore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpDefaultResponseError'
      security:
        - bearerAuth: []
  /paypalweb/pp_onboarding_call:
    get:
      tags:
        - paypalmock
      parameters:
        - in: query
          name: id_back
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            string:
              schema:
                type: string
  /paypalpsp/management/response:
    patch:
      tags:
        - paypalmanagement
      requestBody:
        description: PpOnboardingBackManagementRequest
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PpOnboardingBackManagementRequest'
      responses:
        default:
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpOnboardingBackManagementResponse'
      security:
        - bearerAuth: []
    get:
      tags:
        - paypalmanagement
      parameters:
        - in: query
          name: apiId
          required: false
          schema:
            type: string
            enum:
              - "ONBOARDING"
              - "PAYMENT"
              - "REFUND"
              - "DELETE"
              - "ONBOARDING_REDIRECT"
      responses:
        default:
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpResponseErrorInfo'
      security:
        - bearerAuth: []
  /paypalpsp/management/response/{idAppIo}:
    get:
      tags:
        - paypalmanagement
      parameters:
        - in: path
          name: idAppIo
          required: true
          schema:
            type: string
      responses:
        default:
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpOnboardingBackManagementResponse'
  /postepay/api/v1/payment/create:
    post:
      operationId: createPayment
      tags:
        - Payment Manager Controller
      summary: Inzializzazione della transazione di pagamento
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                required:
                  - paymentID
                  - userRedirectURL
                type: object
                properties:
                  paymentID:
                    description: identificativo della transazione di pagamento assegnato
                      da PosteItaliane
                    type: string
                  userRedirectURL:
                    description: URL verso cui redirigere l'utente per portare a compimento
                      la transazione
                    type: string
        default:
          description: Errore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostePayError'
  /postepay/api/v1/user/onboarding:
    post:
      tags:
        - Payment Manager Controller
      operationId: userPostepayOnboarding
      summary: Postepay user onboarding
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingPostepayRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                required:
                  - onboardingID
                  - userRedirectURL
                type: object
                properties:
                  onboardingID:
                    description: identificativo della transazione di pagamento assegnato
                      da PosteItaliane
                    type: string
                  userRedirectURL:
                    description: URL verso cui redirigere l'utente per portare a compimento
                      la transazione
                    type: string
        default:
          description: Errore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostePayError'
  /postepayweb/change/outcome:
    post:
      operationId: changeOutcomePostePay
      tags:
        - Payment Manager Controller
      parameters:
        - in: query
          name: paymentOutcome
          schema:
            type: string
        - in: query
          name: timeoutMs
          schema:
            type: integer
      responses:
        "200":
          description: OK
  /postepay/api/v1/payment/details:
    post:
      tags:
        - Payment Manager Controller
      operationId: paymentDetail
      summary: Dettagli di una transazione di pagamento
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeatilsPaymentRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                required:
                  - paymentID
                  - userRedirectURL
                  - shopId;
                  - shopTransactionId
                  - result
                  - authNumber
                  - amount
                  - description
                  - currency
                  - buyerName
                  - buyerEmail
                  - paymentChannel
                  - authType
                  - status
                  - refundedAmount
                type: object
                properties:
                  paymentID:
                    type: string
                  userRedirectURL:
                    type: string
                  shopId:
                    type: string
                  shopTransactionId:
                    type: string
                  result:
                    type: string
                  authNumber:
                    type: string
                  amount:
                    type: string
                  description:
                    type: string
                  currency:
                    type: string
                  buyerName:
                    type: string
                  buyerEmail:
                    type: string
                  paymentChannel:
                    type: string
                  authType:
                    type: string
                  status:
                    type: string
                  refundedAmount:
                    type: string
        default:
          description: Errore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostePayError'
  /postepay/api/v1/payment/refund:
    post:
      operationId: refundPostepayPayment
      tags:
        - Payment Manager Controller
      summary: refund transazione di pagamento
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundPaymentRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                required:
                  - paymentID
                  - shopTransactionId
                  - transactionResult
                type: object
                properties:
                  paymentID:
                    description: identificativo della transazione di pagamento assegnato
                      da PosteItaliane
                    type: string
                  shopTransactionId:
                    type: string
                  transactionResult:
                    type: string
                    enum:
                      - OK
                      - KO
        default:
          description: Errore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostePayError'
  /xpay/ecomm/api/paga/autenticazione3DS:
    post:
      tags:
        - XPay Controller
      operationId: paymentAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XPayAuthRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XPayAuthResponseSuccess'
        default:
          description: Errore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XPayAuthResponseError'
  /xpay/change/autenticazione3DS/outcome:
    post:
      tags:
        - XPay Change Outcome Controller
      operationId: xpayChangeAuthenticationOutcome
      parameters:
        - in: query
          name: outcome
          example: "OK"
          schema:
            type: string
            enum:
              - "OK"
              - "KO"
        - in: query
          name: errorCode
          example: 97L
          schema:
            type: number
      responses:
        "200":
          description: OK
  /xpay/ecomm/api/paga/paga3DS:
    post:
      tags:
        - XPay Controller
      operationId: xPayPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XPayPaymentRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XPayPaymentResponseSuccess'
        default:
          description: Errore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XPayPaymentResponseError'
  /xpay/change/paga3DS/outcome:
    post:
      tags:
        - XPay Change Outcome Controller
      operationId: xpayChangePaymentOutcome
      parameters:
        - in: query
          name: outcome
          example: "OK"
          schema:
            type: string
            enum:
              - "OK"
              - "KO"
        - in: query
          name: errorCode
          example: 97L
          schema:
            type: number
      responses:
        "200":
          description: OK
  /xpay/ecomm/api/bo/storna:
    post:
      tags:
        - XPay Controller
      operationId: xPayRefund
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/XPayRefundRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/XPayRefundResponse"
  /xpay/ecomm/api/bo/situazioneOrdine:
    post:
      tags:
        - XPay Controller
      operationId: xPayOrderStatus
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/XPayOrderRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/XPayOrderResponse"
  /xpay/change/storna/outcome:
    post:
      tags:
        - XPay Change Outcome Controller
      operationId: xPayRefundChangeOutcome
      parameters:
        - name: outcome
          in: query
          required: false
          schema:
            type: string
            enum:
              - OK
              - KO
        - name: errorCode
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
  /xpay/change/situazioneOrdine/outcome:
    post:
      tags:
        - XPay Change Outcome Controller
      operationId: xPayOrderStatusChangeOutcome
      parameters:
        - name: outcome
          in: query
          required: false
          schema:
            type: string
            enum:
              - OK
              - KO
        - name: errorCode
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
  /xpay/mac:
    get:
      tags:
        - XPay Controller
      operationId: generateMac
      parameters:
        - name: codiceTransazione
          in: query
          required: true
          schema:
            type: string
        - name: timeStamp
          in: query
          required: true
          schema:
            type: string
        - name: divisa
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: importo
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XPayAuthResponseSuccess'
        default:
          description: Errore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XPayAuthResponseError'
    /cc/:
      get:
        tags:
          - Credit Card Controller
        operationId: creditCard WebView
        responses:
          '200':
            description: OK
    /cc/generateCard:
      get:
        tags:
          - Credit Card Controller
        operationId: generateCard
        parameters:
          - name: type
            in: query
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              "*/*":
                schema:
                  type: string
    /issuer/3ds20/method:
      get:
        tags:
          - Issuer Controller
        operationId: methodUrl WebView
        parameters:
          - name: threeDSMethodData
            in: query
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              "*/*":
                schema:
                  type: string
    /issuer/3ds20/challenge:
      get:
        tags:
          - Issuer Controller
        operationId: challengeUrl WebView
        parameters:
          - name: creq
            in: query
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              "*/*":
                schema:
                  type: string
    /3ds2.0-manager/challenge/save/response:
      post:
        tags:
          - Manager Controller
        operationId: saveChallengeOutcome
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SaveResponseChallenge3Ds2"
          required: true
        responses:
          '200':
            description: OK
    "/vpos/authorize3dsV2":
      post:
        tags:
          - VPOS Controller
        operationId: vposAuthorize
        parameters:
          - name: data
            in: query
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              text/xml;charset=ISO-8859-1:
                schema:
                  "$ref": "#/components/schemas/BPWXmlResponse"
    /vpos/change/outcome:
      post:
        tags:
          - VPOS Settings
        operationId: changeVposOutcome
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ChangeVposOutcome"
          required: true
        responses:
          '200':
            description: OK
components:
  schemas:
    PostePayError:
      type: object
      properties:
        errorCode:
          description: Codice di errore
          type: string
        description:
          description: Descrizione tecnica dell'errore
          type: string
        message:
          description: Messaggio utente
          type: string
    StartOnboardingRequest:
      required:
        - url_return
        - id_appio
      type: object
      properties:
        url_return:
          type: string
          description: URL used to return the result
        id_appio:
          type: string
          description: user identifier
    StartOnboardingResponseSuccess:
      required:
        - esito
        - url_to_call
      type: object
      properties:
        esito:
          type: string
          enum:
            - "1"
          description: URL used to return the result
        url_to_call:
          type: string
          description: url to call to proceed with onboarding
    StartOnboardingResponseError:
      required:
        - esito
        - err_code
        - err_desc
      type: object
      properties:
        esito:
          type: string
          enum:
            - "9" #KO
          description: Api result
        err_code:
          type: string
          enum:
            - "3" #autorizzazione negata
            - "16" #id_appio non esiste
            - "-1" #timeout
        err_desc:
          type: string
    AuthorizationType:
      enum:
        - IMMEDIATA
        - DIFFERITA
      type: string
    PpPayDirectRequest:
      required:
        - id_trs_appio
        - importo
        - fee
      type: object
      properties:
        id_trs_appio:
          type: string
        importo:
          type: number
          format: double
          example: 1.00
        fee:
          type: number
          format: double
          example: 2.00
    PpDirectResponseSuccess:
      required:
        - id_trs_paypal
        - esito
      properties:
        id_trs_paypal:
          type: string
        esito:
          type: string
          enum:
            - "OK"
    PpDirectResponseError:
      required:
        - esito
        - err_code
        - err_desc
      type: object
      properties:
        esito:
          type: string
          enum:
            - "KO" #error
          description: Api result
        err_code:
          type: string
          enum:
            - "9" #input non in formato json
            - "11" #parametri non validi
            - "13" #autorizzazione negata
            - "15" #autorizzazione ip negata
            - "19" #id_appio con bilagr già associato
            - "67" #db internal error
        err_desc:
          type: string
    PpRefundDirectRequest:
      required:
        - id_trs_appio
        - importo
      type: object
      properties:
        id_trs_appio:
          type: string
        importo:
          type: number
          format: double
          example: 1.00
    PpRefundDirectResponseSuccess:
      required:
        - id_trs_paypal
        - esito
      properties:
        id_trs_paypal:
          type: string
        esito:
          type: string
          enum:
            - "OK"
    PpRefundDirectResponseError:
      required:
        - esito
        - err_code
        - err_desc
      type: object
      properties:
        esito:
          type: string
          enum:
            - "KO" #error
          description: Api result
        err_code:
          type: string
          enum:
            - "9" #input non in formato json
            - "11" #parametri non validi
            - "13" #autorizzazione negata
            - "15" #autorizzazione ip negata
            - "19" #id_appio con bilagr già associato
            - "67" #db internal error
        err_desc:
          type: string
    PPPayPalIdAppIoRequest:
      required:
        - id_appio
      properties:
        id_appio:
          type: string
    PpDefaultResponseSuccess:
      required:
        - esito
      properties:
        esito:
          type: string
          enum:
            - "OK"
    PpDefaultResponseError:
      required:
        - esito
        - err_code
        - err_desc
      type: object
      properties:
        esito:
          type: string
          enum:
            - "KO" #error
          description: Api result
        err_code:
          type: string
          enum:
            - "9" #input non in formato json
            - "11" #parametri non validi
            - "13" #autorizzazione negata
            - "15" #autorizzazione ip negata
            - "19" #id_appio con bilagr già associato
            - "67" #db internal error
        err_desc:
          type: string
    PpOnboardingBackManagementRequest:
      required:
        - id_appio
        - err_code
        - api_id
      properties:
        id_appio:
          type: string
        err_code:
          type: string
          enum:
            - "9" #input non in formato json
            - "11" #parametri non validi
            - "13" #autorizzazione negata
            - "15" #autorizzazione ip negata
            - "19" #id_appio con bilagr già associato
            - "67" #db internal error
        api_id:
          type: string
          enum:
            - "ONBOARDING"
            - "PAYMENT"
            - "REFUND"
            - "DELETE"
            - "ONBOARDING_REDIRECT"
    PpOnboardingBackManagementResponse:
      required:
        - id_appio
        - api_id
        - lastUpdateDate
        - err_info
      properties:
        id_appio:
          type: string
        api_id:
          type: string
          enum:
            - "ONBOARDING"
            - "PAYMENT"
            - "REFUND"
            - "DELETE"
            - "ONBOARDING_REDIRECT"
        lastUpdateDate:
          type: string
          example: "dd/MM/yyyy HH:ss:SSSS"
        err_info:
          type: object
          properties:
            code:
              type: string
            description:
              type: string
            httpStatus:
              type: string
            httpCode:
              type: number
              format: integer
            allowed:
              type: array
              items:
                type: string
                enum:
                  - "ONBOARDING"
                  - "PAYMENT"
                  - "REFUND"
                  - "DELETE"
                  - "ONBOARDING_REDIRECT"
    PpResponseErrorInfo:
      properties:
        code:
          type: string
        description:
          type: string
        httpStatus:
          type: string
        httpCode:
          type: number
          format: integer
        allowed:
          type: array
          items:
            type: string
            enum:
              - "ONBOARDING"
              - "PAYMENT"
              - "REFUND"
              - "DELETE"
              - "ONBOARDING_REDIRECT"
    DeatilsPaymentRequest:
      description: ""
      required:
        - shopId
        - shopTransactionId
        - paymentID
      type: object
      properties:
        shopId:
          description: identificativo del negozio
          type: string
        shopTransactionId:
          description: identificativo della transazione lato merchant
          type: string
        paymentID:
          description: paymentID
          type: string
    OnboardingPostepayRequest:
      description: ""
      required:
        - shopId
        - merchantId
        - onboardingTransactionId
        - paymentChannel
        - responseURLs
      type: object
      properties:
        shopId:
          description: identificativo del negozio
          type: string
        merchantId:
          description: identificativo del merchant
          type: string
        onboardingTransactionId:
          description: id onboarding transaction Id
          type: string
        paymentChannel:
          allOf:
            - $ref: '#/components/schemas/PaymentChannel'
            - description: "canale di pagamento, puo essere valorizzato con APP/WEB"
        responseURLs:
          allOf:
            - $ref: '#/components/schemas/ResponseURLs'
            - description: URL di ritorno
    CreatePaymentRequest:
      description: ""
      required:
        - shopId
        - shopTransactionId
        - amount
        - currency
        - paymentChannel
        - authType
        - responseURLs
      type: object
      properties:
        shopId:
          description: identificativo del negozio
          type: string
        shopTransactionId:
          description: identificativo della transazione lato merchant
          type: string
        amount:
          description: importo
          type: string
        description:
          description: descrizione della transazione presentata al cliente
          type: string
        currency:
          description: valuta in codice ISO (EUR = 978)
          type: string
        buyerName:
          description: nome del cliente
          type: string
        buyerEmail:
          description: indirizzo email del cliente
          type: string
        paymentChannel:
          allOf:
            - $ref: '#/components/schemas/PaymentChannel'
            - description: "canale di pagamento, puo essere valorizzato con APP/WEB"
        authType:
          allOf:
            - $ref: '#/components/schemas/AuthorizationType'
            - description: "tipo di autorizzazione, puo essere valorizzato con IMMEDIATA/DIFFERITA"
        responseURLs:
          allOf:
            - $ref: '#/components/schemas/ResponseURLs'
            - description: URL di ritorno
    RefundPaymentRequest:
      description: ""
      required:
        - shopId
        - shopTransactionId
        - merchantId
        - paymentID
        - authNumber
        - currency
      type: object
      properties:
        shopId:
          description: identificativo del negozio
          type: string
        shopTransactionId:
          description: identificativo della transazione lato merchant
          type: string
        amount:
          description: importo
          type: string
        reason:
          description: descrizione della transazione presentata al cliente
          type: string
        currency:
          description: valuta in codice ISO (EUR = 978)
          type: string
        merchantId:
          type: string
        paymentID:
          type: string
        authNumber:
          type: string
    PaymentChannel:
      enum:
        - WEB
        - APP
      type: string
    ResponseURLs:
      description: ""
      required:
        - responseUrlOk
        - responseUrlKo
        - serverNotificationUrl
      type: object
      properties:
        responseUrlOk:
          description: URL di redirect dell'utente per transazione OK completa di
            eventuali parametri da passare
          type: string
        responseUrlKo:
          description: URL di redirect dell'utente per transazione KO completa di
            eventuali parametri da passare
          type: string
        serverNotificationUrl:
          description: URL presso la quale sarà eseguita la chiamata di conferma del
            pagamento solo per i casi OK
          type: string
    XPayAuthRequest:
      description: ""
      required:
        - apiKey
        - urlRisposta
        - codiceTransazione
        - importo
        - divisa
        - pan
        - scadenza
        - cvv
        - timeStamp
        - mac
      type: object
      properties:
        apiKey:
          type: string
        urlRisposta:
          type: string
        codiceTransazione:
          type: string
        importo:
          type: number
          format: BigInteger
        divisa:
          description: valuta in codice ISO (EUR = 978)
          type: number
          format: long
        pan:
          type: string
        scadenza:
          type: string
        cvv:
          type: string
        timeStamp:
          type: string
        mac:
          type: string
    XPayAuthResponseSuccess:
      description: ""
      required:
        - esito
        - idOperazione
        - timeStamp
        - mac
      type: object
      properties:
        esito:
          type: string
          enum:
            - OK
            - KO
        idOperazione:
          type: string
        timeStamp:
          type: number
          format: long
        html:
          type: string
        mac:
          type: string
    XPayAuthResponseError:
      description: ""
      required:
        - esito
        - idOperazione
        - timeStamp
      type: object
      properties:
        esito:
          type: string
          enum:
            - OK
            - KO
        idOperazione:
          type: string
        timeStamp:
          type: number
          format: long
        errore:
          $ref: '#/components/schemas/XPayError'
        mac:
          type: string
    XPayError:
      required:
        - codice
        - messaggio
      properties:
        codice:
          type: number
          format: long
        messaggio:
          type: string
    XPayPaymentRequest:
      description: ""
      required:
        - apiKey
        - codiceTransazione
        - importo
        - divisa
        - xpayNonce
        - timeStamp
        - mac
      type: object
      properties:
        apiKey:
          type: string
        codiceTransazione:
          type: string
        importo:
          type: number
          format: BigInteger
        divisa:
          description: valuta in codice ISO (EUR = 978)
          type: number
          format: long
        xpayNonce:
          type: string
        timeStamp:
          type: string
        mac:
          type: string
        parametriAggiuntivi:
          $ref: '#/components/schemas/XPayAdditionalParameters'
    XPayAdditionalParameters:
      properties:
        mail:
          type: string
        nome:
          type: string
        cognome:
          type: string
        descrizione:
          type: string
        note1:
          type: string
        XPayTconTabEnum:
          type: string
          enum:
            - C
            - D
    XPayPaymentResponseSuccess:
      description: ""
      required:
        - esito
        - idOperazione
        - timeStamp
        - mac
        - codiceAutorizzazione
        - codiceConvenzione
        - data
        - nazione
        - regione
        - brand
        - tipoProdotto
        - tipoTransazione
      type: object
      properties:
        esito:
          type: string
          enum:
            - OK
            - KO
        idOperazione:
          type: string
        timeStamp:
          type: number
          format: long
        mac:
          type: string
        codiceAutorizzazione:
          type: string
        codiceConvenzione:
          type: string
        data:
          type: string
        nazione:
          type: string
        regione:
          type: string
        brand:
          type: string
        tipoProdotto:
          type: string
        tipoTransazione:
          type: string
        ppo:
          type: string
        parametriAggiuntivi:
          $ref: '#/components/schemas/XPayAdditionalParameters'
    XPayPaymentResponseError:
      description: ""
      required:
        - esito
        - idOperazione
        - timeStamp
      type: object
      properties:
        esito:
          type: string
          enum:
            - OK
            - KO
        idOperazione:
          type: string
        timeStamp:
          type: number
          format: long
        errore:
          $ref: '#/components/schemas/XPayError'
        mac:
          type: string
    XPayRefundRequest:
      required:
        - apiKey
        - codiceTransazione
        - divisa
        - importo
        - mac
        - timeStamp
      type: object
      properties:
        apiKey:
          type: string
        codiceTransazione:
          type: string
        importo:
          type: integer
        divisa:
          type: integer
          format: int64
        timeStamp:
          type: string
        mac:
          type: string
        idContabParzialePayPal:
          type: string
    XPayInfoApm:
      type: object
      properties:
        apm:
          type: string
        info:
          type: string
    XPayRefundResponse:
      type: object
      properties:
        esito:
          type: string
          enum:
            - OK
            - KO
        idOperazione:
          type: string
        timeStamp:
          type: integer
          format: int64
        mac:
          type: string
        infoAPM:
          "$ref": "#/components/schemas/XPayInfoApm"
        errore:
          "$ref": "#/components/schemas/XPayError"
    XPayOrderRequest:
      required:
        - apiKey
        - codiceTransazione
        - mac
        - timeStamp
      type: object
      properties:
        apiKey:
          type: string
        codiceTransazione:
          type: string
        timeStamp:
          type: string
        mac:
          type: string
    XPayOrderResponse:
      type: object
      properties:
        timeStamp:
          type: integer
          format: int64
        esito:
          type: string
          enum:
            - OK
            - KO
        idOperazione:
          type: string
        scadenza:
          type: string
        mac:
          type: string
        errore:
          "$ref": "#/components/schemas/XPayError"
        report:
          type: array
          items:
            "$ref": "#/components/schemas/XPayReport"
    XPayReport:
      type: object
      properties:
        numeroMerchant:
          type: string
        codiceTransazione:
          type: string
        importo:
          type: integer
        divisa:
          type: string
        codiceAutorizzazione:
          type: string
        brand:
          type: string
        tipoPagamento:
          type: string
        tipoTransazione:
          type: string
        nazione:
          type: string
        tipoProdotto:
          type: string
        pan:
          type: string
        parametri:
          type: string
        stato:
          type: string
        dataTransazione:
          type: string
        mail:
          type: string
        dettaglio:
          "$ref": "#/components/schemas/XPayReportDetail"
    XPayReportDetail:
      type: object
      properties:
        nome:
          type: string
        cognome:
          type: string
        mail:
          type: string
        importo:
          type: integer
        importoRifiutato:
          type: integer
        divisa:
          type: string
        stato:
          type: string
        codiceTransazione:
          type: string
        parametriAggiuntivi:
          type: string
        controvaloreValuta:
          type: integer
        decimaliValuta:
          type: integer
          format: int32
        tassoCambio:
          type: integer
        codiceValuta:
          type: integer
          format: int32
        flagValuta:
          type: boolean
        operazioni:
          type: array
          items:
            "$ref": "#/components/schemas/XPayReportOperations"
    XPayReportOperations:
      type: object
      properties:
        tipoOperazione:
          type: string
        importo:
          type: integer
        divisa:
          type: string
        stato:
          type: string
        dataOperazione:
          type: string
        utente:
          type: string
        idContabParzialePayPal:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: string
  CreditCardResponse:
    type: object
    properties:
      cardNumber:
        type: string
      urlImg:
        type: string
  SaveResponseChallenge3Ds2:
    type: object
    properties:
      outcome:
        type: string
      threeDSServerTransID:
        type: string
    PpOnboardingBackManagementRequest:
      required:
        - api_id
        - id_appio
      type: object
      properties:
        id_appio:
          type: string
        err_code:
          type: string
          enum:
            - PpResponseErrCode.TIMEOUT(code=-1, description=, httpStatus=504 GATEWAY_TIMEOUT,
              allowed=[ONBOARDING, PAYMENT, REFUND, DELETE])
            - PpResponseErrCode.INPUT_NON_JSON(code=909, description=input non in formato
              json, httpStatus=400 BAD_REQUEST, allowed=[ONBOARDING, PAYMENT, REFUND,
              DELETE])
            - PpResponseErrCode.PARAMETRI_NON_VALIDI(code=911, description=parametri
              non validi, httpStatus=400 BAD_REQUEST, allowed=[ONBOARDING, PAYMENT,
              REFUND, DELETE])
            - PpResponseErrCode.AUTORIZZAZIONE_NEGATA(code=913, description=autorizzazione
              negata, httpStatus=401 UNAUTHORIZED, allowed=[ONBOARDING, PAYMENT, REFUND,
              DELETE, ONBOARDING_REDIRECT])
            - PpResponseErrCode.AUTORIZZAZIONE_IP_NEGATA(code=915, description=autorizzazione
              ip negata, httpStatus=401 UNAUTHORIZED, allowed=[ONBOARDING, PAYMENT,
              REFUND, DELETE, ONBOARDING_REDIRECT])
            - PpResponseErrCode.PAYPAL_GET_TOKEN_KO(code=931, description=paypal get
              api token KO, httpStatus=500 INTERNAL_SERVER_ERROR, allowed=[ONBOARDING,
              PAYMENT, REFUND, DELETE])
            - PpResponseErrCode.DB_INTERNAL_ERROR(code=967, description=db internal
              error, httpStatus=500 INTERNAL_SERVER_ERROR, allowed=[ONBOARDING, PAYMENT,
              REFUND, DELETE, ONBOARDING_REDIRECT])
            - PpResponseErrCode.TOKEN_PAYPAL_NON_VALIDO(code=116, description=token
              paypal non valido, httpStatus=500 INTERNAL_SERVER_ERROR, allowed=[ONBOARDING])
            - PpResponseErrCode.CODICE_CONTRATTO_PRESENTE(code=119, description=id_appio
              con bilagr già associato, httpStatus=422 UNPROCESSABLE_ENTITY, allowed=[ONBOARDING])
            - PpResponseErrCode.ID_BACK_NON_VALIDO(code=210, description=id_back non
              valido o utilizzato, httpStatus=null, allowed=[ONBOARDING_REDIRECT])
            - PpResponseErrCode.TIMESTAMP_SCADUTO(code=217, description=timestamp scaduto,
              httpStatus=null, allowed=[ONBOARDING_REDIRECT])
            - PpResponseErrCode.PAYPAL_CREATE_AGR_TOKEN_KO(code=233, description=paypal
              create billing agr token KO, httpStatus=null, allowed=[ONBOARDING_REDIRECT])
            - PpResponseErrCode.RITORNO_PAYPAL_ANOMALO(code=257, description=ritorno
              paypal anomalo, httpStatus=null, allowed=[ONBOARDING_REDIRECT])
            - PpResponseErrCode.PAYPAL_CREATE_AGR_ID_KO_3(code=265, description=paypal
              api create billing agr id KO, httpStatus=null, allowed=[ONBOARDING_REDIRECT])
            - PpResponseErrCode.DELETE_ID_APP_IO_NON_ESISTE(code=318, description=id_appio
              non esiste o bilagr non valido, httpStatus=404 NOT_FOUND, allowed=[DELETE])
            - PpResponseErrCode.DELETE_BILAGR_KO(code=365, description=paypal bilagr
              delete KO, httpStatus=500 INTERNAL_SERVER_ERROR, allowed=[DELETE])
            - PpResponseErrCode.PAYMENT_ID_APP_IO_NON_ESISTE(code=418, description=id_appio
              non esiste, httpStatus=404 NOT_FOUND, allowed=[PAYMENT])
            - PpResponseErrCode.FEE_NON_VALIDA(code=419, description=fee non valida,
              httpStatus=400 BAD_REQUEST, allowed=[PAYMENT])
            - PpResponseErrCode.BILL_AGR_NON_TROVATO(code=421, description=bilagr non
              trovato, httpStatus=404 NOT_FOUND, allowed=[PAYMENT])
            - PpResponseErrCode.LIMITE_IMPORTO_SUPERATO(code=423, description=limite
              importo superato, httpStatus=422 UNPROCESSABLE_ENTITY, allowed=[PAYMENT])
            - PpResponseErrCode.PAGAMENTO_DIRETTO_KO_BILL_AGR(code=463, description=paypal
              pagamento diretto KO (Invalid billing_agreement_id), httpStatus=422 UNPROCESSABLE_ENTITY,
              allowed=[PAYMENT])
            - PpResponseErrCode.PAGAMENTO_DIRETTO_KO(code=465, description=paypal pagamento
              diretto KO, httpStatus=422 UNPROCESSABLE_ENTITY, allowed=[PAYMENT])
            - PpResponseErrCode.ID_TRS_NON_VALIDO(code=518, description=id_trs_appio
              non valido, httpStatus=404 NOT_FOUND, allowed=[REFUND])
            - PpResponseErrCode.ACQUIRE_REFUND_NON_VALIDO(code=521, description=acquire_refund
              non valido, httpStatus=422 UNPROCESSABLE_ENTITY, allowed=[REFUND])
            - PpResponseErrCode.ID_TRS_OR_IMPORT_NOT_MATCH(code=522, description=id_trs_appio
              o importo non coerente, httpStatus=422 UNPROCESSABLE_ENTITY, allowed=[REFUND])
            - PpResponseErrCode.PAYPAL_REFUND_KO(code=565, description=refund error
              KO, httpStatus=422 UNPROCESSABLE_ENTITY, allowed=[REFUND])
        api_id:
          type: string
          enum:
            - ONBOARDING
            - PAYMENT
            - REFUND
            - DELETE
            - ONBOARDING_REDIRECT
  BPWXmlResponse:
    type: object
    properties:
      timestamp:
        type: string
        xml:
          name: Timestamp
      result:
        type: string
        xml:
          name: Result
      mac:
        type: string
        xml:
          name: MAC
      data:
        "$ref": "#/components/schemas/XmlData"
    xml:
      name: BPWXmlResponse
  OrderStatus:
    type: object
    properties:
      header:
        "$ref": "#/components/schemas/OrderStatusHeader"
      orderId:
        type: string
        xml:
          name: OrderID
  OrderStatusHeader:
    type: object
    properties:
      shopId:
        type: string
        xml:
          name: ShopID
      operatorId:
        type: string
        xml:
          name: OperatorID
      reqRefNum:
        type: string
        xml:
          name: ReqRefNum
  PanAliasData:
    type: object
    properties:
      panAlias:
        type: string
        xml:
          name: PanAlias
      panAliasExpDate:
        type: string
        xml:
          name: PanAliasExpDate
      panAliasTail:
        type: string
        xml:
          name: PanAliasTail
      mac:
        type: string
        xml:
          name: MAC
  ThreeDSAuthorization:
    type: object
    properties:
      paymentType:
        type: string
        xml:
          name: PaymentType
      authorizationType:
        type: string
        xml:
          name: AuthorizationType
      transactionID:
        type: string
        xml:
          name: TransactionID
      network:
        type: string
        xml:
          name: Network
      orderID:
        type: string
        xml:
          name: OrderID
      transactionAmount:
        type: string
        xml:
          name: TransactionAmount
      authorizedAmount:
        type: string
        xml:
          name: AuthorizedAmount
      currency:
        type: string
        xml:
          name: Currency
      exponent:
        type: string
        xml:
          name: Exponent
      accountedAmount:
        type: string
        xml:
          name: AccountedAmount
      refundedAmount:
        type: string
        xml:
          name: RefundedAmount
      transactionResult:
        type: string
        xml:
          name: TransactionResult
      timestamp:
        type: string
        xml:
          name: Timestamp
      authorizationNumber:
        type: string
        xml:
          name: AuthorizationNumber
      acquirerBIN:
        type: string
        xml:
          name: AcquirerBIN
      merchantID:
        type: string
        xml:
          name: MerchantID
      transactionStatus:
        type: string
        xml:
          name: TransactionStatus
      responseCodeISO:
        type: string
        xml:
          name: ResponseCodeISO
      rrn:
        type: string
        xml:
          name: RRN
      mac:
        type: string
        xml:
          name: MAC
  ThreeDSAuthorizationRequest0:
    type: object
    properties:
      header:
        "$ref": "#/components/schemas/VposHeader"
      orderID:
        type: string
        xml:
          name: OrderID
      pan:
        type: string
        xml:
          name: Pan
      cvv2:
        type: string
        xml:
          name: CVV2
      createPanAlias:
        type: string
        xml:
          name: CreatePanAlias
      expDate:
        type: string
        xml:
          name: ExpDate
      amount:
        type: string
        xml:
          name: Amount
      currency:
        type: string
        xml:
          name: Currency
      exponent:
        type: string
        xml:
          name: Exponent
      accountingMode:
        type: string
        xml:
          name: AccountingMode
      network:
        type: string
        xml:
          name: Network
      userid:
        type: string
        xml:
          name: Userid
      opDescr:
        type: string
        xml:
          name: OpDescr
      productRef:
        type: string
        xml:
          name: ProductRef
      name:
        type: string
        xml:
          name: Name
      surname:
        type: string
        xml:
          name: Surname
      taxID:
        type: string
        xml:
          name: TaxID
      threeDSData:
        type: string
        xml:
          name: ThreeDSData
      notifUrl:
        type: string
        xml:
          name: NotifUrl
      emailCH:
        type: string
        xml:
          name: EmailCH
      nameCH:
        type: string
        xml:
          name: NameCH
      acquirer:
        type: string
        xml:
          name: Acquirer
      ipAddress:
        type: string
        xml:
          name: IpAddress
      usrAuthFlag:
        type: string
        xml:
          name: UsrAuthFlag
      options:
        type: string
        xml:
          name: Options
      antiFraud:
        type: string
        xml:
          name: AntiFraud
      installmentsNumber:
        type: string
        xml:
          name: InstallmentsNumber
      threeDSMtdNotifUrl:
        type: string
        xml:
          name: ThreeDSMtdNotifUrl
      challengeWinSize:
        type: string
        xml:
          name: ChallengeWinSize
      trecurr:
        type: string
      cprof:
        type: string
      crecurr:
        type: string
  ThreeDSAuthorizationRequest1:
    type: object
    properties:
      header:
        "$ref": "#/components/schemas/VposHeader"
      threeDSTransId:
        type: string
        xml:
          name: ThreeDSTransID
      threeDSMtdComplInd:
        type: string
        xml:
          name: ThreeDSMtdComplInd
  ThreeDSAuthorizationRequest2:
    type: object
    properties:
      header:
        "$ref": "#/components/schemas/VposHeader"
      threeDSTransId:
        type: string
        xml:
          name: ThreeDSTransID
  ThreeDSChallenge:
    type: object
    properties:
      threeDSTransId:
        type: string
        xml:
          name: ThreeDSTransId
      acsUrl:
        type: string
        xml:
          name: ACSUrl
      mac:
        type: string
        xml:
          name: MAC
      creq:
        type: string
  ThreeDSMethod:
    type: object
    properties:
      threeDSTransId:
        type: string
        xml:
          name: ThreeDSTransId
      threeDSMethodData:
        type: string
        xml:
          name: ThreeDSMethodData
      threeDSMethodUrl:
        type: string
        xml:
          name: ThreeDSMethodUrl
      mac:
        type: string
        xml:
          name: MAC
  VposHeader:
    type: object
    properties:
      shopID:
        type: string
        xml:
          name: ShopID
      operatorID:
        type: string
        xml:
          name: OperatorID
      reqRefNum:
        type: string
        xml:
          name: ReqRefNum
  XmlData:
    type: object
    properties:
      orderStatus:
        "$ref": "#/components/schemas/OrderStatus"
      productRef:
        type: string
        xml:
          name: ProductRef
      numberOfItems:
        type: integer
        format: int32
        xml:
          name: NumberOfItems
      authorization:
        "$ref": "#/components/schemas/ThreeDSAuthorization"
      panAliasData:
        "$ref": "#/components/schemas/PanAliasData"
      header:
        "$ref": "#/components/schemas/OrderStatusHeader"
      orderId:
        type: string
        xml:
          name: OrderID
      threeDSAuthorizationRequest0:
        "$ref": "#/components/schemas/ThreeDSAuthorizationRequest0"
      threeDSAuthorizationRequest1:
        "$ref": "#/components/schemas/ThreeDSAuthorizationRequest1"
      threeDSAuthorizationRequest2:
        "$ref": "#/components/schemas/ThreeDSAuthorizationRequest2"
      threeDSMethod:
        "$ref": "#/components/schemas/ThreeDSMethod"
      threeDSChallenge:
        "$ref": "#/components/schemas/ThreeDSChallenge"
      threeDSAuthorization:
        "$ref": "#/components/schemas/ThreeDSAuthorization"
  ChangeVposOutcome:
    required:
      - httpOutcome
      - method3dsOutcome
      - orderStatusOutcome
      - step0Outcome
      - step1Outcome
      - transactionStatusOutcome
    type: object
    properties:
      method3dsOutcome:
        type: string
        enum:
          - OK
          - KO
      step0Outcome:
        type: string
        enum:
          - SUCCESS
          - REQREFNUM_DUPLICATED_OR_INCORRECT
          - INCORRECT_MESSAGE_FORMAT_MISSING_OR_INCORRECT_FIELD
          - INCORRECT_API_AUTHENTICATION_INCORRECT_MAC
          - UNFORESEEN_ERROR_DURING_PROCESSING_OF_REQUEST
          - THE_CARD_IS_VBV_ENABLED
          - METHOD
          - A_CHALLENGE_FLOW
          - EMPTY_XML_OR_MISSING_DATA_PARAMETER
          - XML_NOT_PARSABLE
          - INSTALLMENTS_NOT_AVAILABLE
          - INSTALLMENT_NUMBER_OUT_OF_BOUNDS_CLIENT_SIDE
          - TRANSACTION_FAILED_SEE_SPECIFIC_OUTCOME
      step1Outcome:
        type: string
        enum:
          - SUCCESS
          - REQREFNUM_DUPLICATED_OR_INCORRECT
          - INCORRECT_MESSAGE_FORMAT_MISSING_OR_INCORRECT_FIELD
          - INCORRECT_API_AUTHENTICATION_INCORRECT_MAC
          - UNFORESEEN_ERROR_DURING_PROCESSING_OF_REQUEST
          - THREEDSTRANSID_NOT_FOUND
          - MAXIMUM_TIME_LIMIT_FOR_FORWARDING_THE_VBV
          - A_CHALLENGE_FLOW
          - EMPTY_XML_OR_MISSING_DATA_PARAMETER
          - XML_NOT_PARSABLE
          - TRANSACTION_FAILED_SEE_SPECIFIC_OUTCOME
      orderStatusOutcome:
        type: string
        enum:
          - SUCCESS
          - ORDER_OR_REQREFNUM_NOT_FOUND
          - REQREFNUM_DUPLICATED_OR_INCORRECT
          - INCORRECT_MESSAGE_FORMAT_MISSING_OR_INCORRECT_FIELD
          - INCORRECT_API_AUTHENTICATION_INCORRECT_MAC
          - UNFORESEEN_ERROR_DURING_PROCESSING_OF_REQUEST
          - THREEDSTRANSID_NOT_FOUND
          - EMPTY_XML_OR_MISSING_DATA_PARAMETER
          - XML_NOT_PARSABLE
          - TRANSACTION_FAILED_SEE_SPECIFIC_OUTCOME
      transactionStatusOutcome:
        type: string
        enum:
          - AUTH_GRANTED_BOOKABLE
          - AUTH_DENIED
          - AUTH_BOOKED_TO_BE_PROCESSED_BY_CLEARING
          - AUTH_BOOKED_PROCESSED_BY_CLEARING
          - AUTH_REVERSED
          - AUTH_TO_BE_REVERSED_DUE_TO_ERROR
          - AUTH_UNDERWAY
      httpOutcome:
        type: string
        enum:
          - OK
          - NOT_FOUND
          - SERVICE_UNAVAILABLE